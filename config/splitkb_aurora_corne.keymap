/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        const: const {
            compatible = "zmk,behavior-send-string";
            label = "CONST";
            #binding-cells = <0>;
            text = "const";
        };

        export: export {
            compatible = "zmk,behavior-send-string";
            label = "EXPORT";
            #binding-cells = <0>;
            text = "export";
        };

        email: email {
            compatible = "zmk,behavior-send-string";
            label = "EMAIL";
            #binding-cells = <0>;
            text = "emericwarnez@bitsoflove.be";
        };

        password: password {
            compatible = "zmk,behavior-send-string";
            label = "PASSWORD";
            #binding-cells = <0>;
            text = "Test123";
        };

        log: log {
            compatible = "zmk,behavior-send-string";
            label = "LOG";
            #binding-cells = <0>;
            text = "console.log(";
        };

        func: func {
            compatible = "zmk,behavior-send-string";
            label = "FUNC";
            #binding-cells = <0>;
            text = "() => {";
        };

        HRM: HRM {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <13 14 15 16 19 20 21 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // |  ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // |GRAVE |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ENT  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q         &kp W         &kp E        &kp R        &kp T        &kp Y      &kp U        &kp I        &kp O         &kp P                 &kp BSPC
&kp ESC    &HRM LSHFT A  &HRM LCTRL S  &HRM LALT D  &HRM LGUI F  &kp G        &kp H      &HRM RGUI J  &HRM RALT K  &HRM RCTRL L  &HRM RSHFT SEMICOLON  &kp SQT
&kp GRAVE  &kp Z         &kp X         &kp C        &kp V        &kp B        &kp N      &kp M        &kp COMMA    &kp DOT       &kp FSLH              &kp RET
                                       &kp LGUI     &mo 1        &kp LSHFT    &kp SPACE  &mo 2        &kp DEL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&trans      &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6      &kp N7    &kp N8  &kp N9     &kp N0  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT    &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &caps_word  &trans    &trans  &trans     &trans  &trans
                                        &trans        &trans        &trans          &trans      &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |     |  _  |  +  |  [  |  ]  |  \   |
            // | SHFT |     |     |     |     |     |   |     |  -  |  =  |  {  |  }  | "|"  |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT     &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET         &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp DEL
&trans  &trans   &trans     &trans      &trans     &trans       &kp LESS_THAN     &kp UNDER  &kp PLUS   &kp LBKT  &kp RBKT  &kp PIPE
&trans  &trans    &trans  &trans    &trans    &trans       &kp GREATER_THAN  &kp MINUS  &kp EQUAL  &kp LBRC  &kp RBRC  &kp BSLH
                             &trans    &trans    &trans       &trans            &trans     &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |     |  _  |  +  |  [  |  ]  |  \   |
            // | SHFT |     |     |     |     |     |   |     |  -  |  =  |  {  |  }  | "|"  |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD    &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD
&kp F1  &kp F2           &kp F3           &kp F4           &kp F5           &kp F6             &kp F7           &kp F8           &kp F9           &kp F10          &kp F11          &kp F12
&trans  &trans           &trans           &trans           &trans           &trans             &trans           &trans           &trans           &trans           &trans           &trans
                                          &trans           &trans           &trans             &trans           &trans           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
